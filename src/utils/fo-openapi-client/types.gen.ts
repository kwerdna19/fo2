// This file is auto-generated by @hey-api/openapi-ts

export type GetGuildLeaderboardData = {
	/**
	 * API Key for authentication.
	 */
	xApiKey: unknown;
};

export type GetGuildLeaderboardResponse = Array<{
	/**
	 * The name of the guild.
	 */
	Name?: string;
	/**
	 * The level of the guild.
	 */
	Level?: number;
}>;

export type GetGuildMembersData = {
	/**
	 * Name of the guild for which to retrieve members. The guild name must be between 4 and 18 characters and can only contain alphanumeric characters and spaces.
	 *
	 */
	requestBody: {
		/**
		 * The name of the guild to retrieve members for, adhering to validation rules.
		 *
		 */
		name?: string;
	};
	/**
	 * API Key for authentication.
	 */
	xApiKey: unknown;
};

export type GetGuildMembersResponse = Array<{
	/**
	 * The name of the guild member.
	 */
	Name?: string;
	/**
	 * The sprite image reference of the guild member.
	 */
	Sprite?: string;
	/**
	 * The level of the guild member.
	 */
	Level?: number;
	/**
	 * The name of the guild.
	 */
	GuildName?: string;
	/**
	 * The rank of the guild member within the guild.
	 */
	GuildRank?: string;
}>;

export type GetGuildDetailsData = {
	/**
	 * Name of the guild for which to retrieve details. The guild name must be between 4 and 18 characters and can only contain alphanumeric characters and spaces.
	 *
	 */
	requestBody: {
		/**
		 * The name of the guild to retrieve details for, adhering to validation rules.
		 */
		name?: string;
	};
	/**
	 * API Key for authentication.
	 */
	xApiKey: unknown;
};

export type GetGuildDetailsResponse = {
	/**
	 * The name of the guild.
	 */
	Name?: string;
	/**
	 * The number of members in the guild.
	 */
	NumMembers?: number;
	/**
	 * The total donations made to the guild.
	 */
	TotalDonations?: number;
	/**
	 * The level of the guild.
	 */
	Level?: number;
	/**
	 * The date and time the guild was approved.
	 */
	Approved?: string;
};

export type $OpenApiTs = {
	"/api/public/guild/leaderboard": {
		get: {
			req: GetGuildLeaderboardData;
			res: {
				/**
				 * Successfully retrieved the top 10 guilds.
				 */
				200: Array<{
					/**
					 * The name of the guild.
					 */
					Name?: string;
					/**
					 * The level of the guild.
					 */
					Level?: number;
				}>;
				/**
				 * Internal server error. This could be due to database connectivity issues or unexpected server errors.
				 */
				500: unknown;
			};
		};
	};
	"/api/public/guild/members": {
		post: {
			req: GetGuildMembersData;
			res: {
				/**
				 * Successfully retrieved the guild members.
				 */
				200: Array<{
					/**
					 * The name of the guild member.
					 */
					Name?: string;
					/**
					 * The sprite image reference of the guild member.
					 */
					Sprite?: string;
					/**
					 * The level of the guild member.
					 */
					Level?: number;
					/**
					 * The name of the guild.
					 */
					GuildName?: string;
					/**
					 * The rank of the guild member within the guild.
					 */
					GuildRank?: string;
				}>;
				/**
				 * Invalid JSON in request body or the guild name does not meet validation criteria (missing, empty, not between 4 and 18 characters, or contains invalid characters).
				 */
				400: unknown;
				/**
				 * Internal server error. This could be due to database connectivity issues or unexpected server errors.
				 */
				500: unknown;
			};
		};
	};
	"/api/public/guild": {
		post: {
			req: GetGuildDetailsData;
			res: {
				/**
				 * Successfully retrieved the guild details.
				 */
				200: {
					/**
					 * The name of the guild.
					 */
					Name?: string;
					/**
					 * The number of members in the guild.
					 */
					NumMembers?: number;
					/**
					 * The total donations made to the guild.
					 */
					TotalDonations?: number;
					/**
					 * The level of the guild.
					 */
					Level?: number;
					/**
					 * The date and time the guild was approved.
					 */
					Approved?: string;
				};
				/**
				 * Invalid JSON in request body or the guild name does not meet validation criteria (missing, empty, not between 4 and 18 characters, or contains invalid characters).
				 */
				400: unknown;
				/**
				 * Internal server error. This could be due to database connectivity issues or unexpected server errors.
				 */
				500: unknown;
			};
		};
	};
};
